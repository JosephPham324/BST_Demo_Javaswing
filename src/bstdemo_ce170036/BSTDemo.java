package bstdemo_ce170036;

import java.awt.BorderLayout;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.InputMismatchException;
import java.util.Scanner;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author Pham Nhat Quang CE170036
 */
public class BSTDemo extends javax.swing.JFrame {

    BSTPaper p;
    BSTree tree;

    /**
     * Creates new form BSTDemo
     */
    public BSTDemo() {
        initComponents();

        this.setExtendedState(this.getExtendedState() | JFrame.MAXIMIZED_BOTH);

        tree = new BSTree(1920, 50);
        p = new BSTPaper(tree);
        pnlPaper.setSize(1080, 720);
        pnlPaper.setLayout(new BorderLayout());
        pnlPaper.add(p, BorderLayout.CENTER);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlConfig = new javax.swing.JPanel();
        value = new javax.swing.JTextField();
        addValue = new javax.swing.JButton();
        addRandomValue = new javax.swing.JButton();
        preOrder = new javax.swing.JButton();
        inOrder = new javax.swing.JButton();
        postOrder = new javax.swing.JButton();
        CLEAR = new javax.swing.JButton();
        search = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        BFS = new javax.swing.JButton();
        DFS = new javax.swing.JButton();
        balance = new javax.swing.JButton();
        saveFIle = new javax.swing.JButton();
        openFile = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        RESULT = new javax.swing.JTextField();
        pnlPaper = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Binary Search Tree v1");

        pnlConfig.setBorder(javax.swing.BorderFactory.createTitledBorder("Configuration"));
        pnlConfig.setToolTipText("Configuration");

        value.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                valueActionPerformed(evt);
            }
        });

        addValue.setText("Add value to tree");
        addValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addValueActionPerformed(evt);
            }
        });

        addRandomValue.setText("Add random value");
        addRandomValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addRandomValueActionPerformed(evt);
            }
        });

        preOrder.setText("Pre-Order traversal");
        preOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                preOrderActionPerformed(evt);
            }
        });

        inOrder.setText("In-Order traversal");
        inOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inOrderActionPerformed(evt);
            }
        });

        postOrder.setText("Post-Order traversal");
        postOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                postOrderActionPerformed(evt);
            }
        });

        CLEAR.setText("Clear");
        CLEAR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CLEARActionPerformed(evt);
            }
        });

        search.setText("Find value");
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });

        delete.setText("Delete value");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        BFS.setText("Breadth First Search");
        BFS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BFSActionPerformed(evt);
            }
        });

        DFS.setText("Depth First Search");
        DFS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DFSActionPerformed(evt);
            }
        });

        balance.setText("Balance tree");
        balance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                balanceActionPerformed(evt);
            }
        });

        saveFIle.setText("SAVE");
        saveFIle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveFIleActionPerformed(evt);
            }
        });

        openFile.setText("OPEN");
        openFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openFileActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlConfigLayout = new javax.swing.GroupLayout(pnlConfig);
        pnlConfig.setLayout(pnlConfigLayout);
        pnlConfigLayout.setHorizontalGroup(
            pnlConfigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlConfigLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(saveFIle)
                .addGap(1, 1, 1)
                .addComponent(openFile)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlConfigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlConfigLayout.createSequentialGroup()
                        .addComponent(CLEAR)
                        .addGap(29, 29, 29))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlConfigLayout.createSequentialGroup()
                        .addComponent(value, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(pnlConfigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlConfigLayout.createSequentialGroup()
                        .addComponent(addValue)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(delete)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(balance))
                    .addGroup(pnlConfigLayout.createSequentialGroup()
                        .addComponent(addRandomValue)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(search)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addGroup(pnlConfigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(preOrder)
                    .addComponent(BFS))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlConfigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlConfigLayout.createSequentialGroup()
                        .addComponent(inOrder)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(postOrder))
                    .addComponent(DFS))
                .addGap(9, 9, 9))
        );
        pnlConfigLayout.setVerticalGroup(
            pnlConfigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlConfigLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlConfigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inOrder)
                    .addComponent(postOrder)
                    .addComponent(preOrder)
                    .addComponent(addValue)
                    .addComponent(delete)
                    .addComponent(balance)
                    .addComponent(value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlConfigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CLEAR)
                    .addComponent(BFS)
                    .addComponent(DFS)
                    .addComponent(addRandomValue)
                    .addComponent(search))
                .addContainerGap(56, Short.MAX_VALUE))
            .addGroup(pnlConfigLayout.createSequentialGroup()
                .addGroup(pnlConfigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveFIle)
                    .addComponent(openFile))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jLabel1.setFont(new java.awt.Font("sansserif", 1, 15)); // NOI18N
        jLabel1.setText("RESULT:");

        RESULT.setText("No results yet");

        pnlPaper.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout pnlPaperLayout = new javax.swing.GroupLayout(pnlPaper);
        pnlPaper.setLayout(pnlPaperLayout);
        pnlPaperLayout.setHorizontalGroup(
            pnlPaperLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1086, Short.MAX_VALUE)
        );
        pnlPaperLayout.setVerticalGroup(
            pnlPaperLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 494, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlConfig, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pnlPaper, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(RESULT)))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlConfig, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(RESULT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(pnlPaper, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void valueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_valueActionPerformed
        try {
            p.resetSearch();
            p.addNode(Integer.parseInt(value.getText().trim()));
        } catch (NumberFormatException nfe) {
            JOptionPane.showMessageDialog(null, "Error: You must input an integer!");
        }
    }//GEN-LAST:event_valueActionPerformed

    private void addValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addValueActionPerformed
        try {
            p.resetSearch();
            p.addNode(Integer.parseInt(value.getText().trim()));
        } catch (NumberFormatException nfe) {
            JOptionPane.showMessageDialog(null, "Error: You must input an integer!");
        }
    }//GEN-LAST:event_addValueActionPerformed

    private void addRandomValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addRandomValueActionPerformed
        p.resetSearch();
        p.addNode((int) (Math.random() * (100 - 0 + 1) + 0));
    }//GEN-LAST:event_addRandomValueActionPerformed

    private void preOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_preOrderActionPerformed
        p.resetSearch();
        tree.preOrder();
        this.RESULT.setText(tree.getTraversalResult());
    }//GEN-LAST:event_preOrderActionPerformed

    private void inOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inOrderActionPerformed
        p.resetSearch();
        tree.inOrder();
        this.RESULT.setText(tree.getTraversalResult());
    }//GEN-LAST:event_inOrderActionPerformed

    private void postOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_postOrderActionPerformed
        p.resetSearch();
        tree.postOrder();
        this.RESULT.setText(tree.getTraversalResult());
    }//GEN-LAST:event_postOrderActionPerformed

    private void CLEARActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CLEARActionPerformed
        p.resetSearch();
        this.tree.clear();
        p.repaint();
        RESULT.setText(tree.getTraversalResult());
    }//GEN-LAST:event_CLEARActionPerformed

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
        p.resetSearch();
        try {
            if (this.tree.findNode(Integer.parseInt(value.getText().trim()))!=null){
            this.RESULT.setText(p.getSearchPath());
            repaint();
            } else 
                JOptionPane.showMessageDialog(null, "Couldn't find a node with that value!");
        } catch (NumberFormatException nfe) {

        }
    }//GEN-LAST:event_searchActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        p.resetSearch();
        try {
            int valueToDelete = Integer.parseInt(value.getText().trim());
            BSTNode nodeToDelete = this.tree.findNode(valueToDelete);
            if (nodeToDelete != null) {
                if (nodeToDelete.getCount() - 1 == 0) {
                    if (JOptionPane.showConfirmDialog(null, "Are you sure you want to delete?", "Confirmation", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                        if (this.tree.deleteValue(valueToDelete)) {
                            repaint();
                            JOptionPane.showMessageDialog(null, "Delete successful!");
                        } else {
                            JOptionPane.showMessageDialog(null, "Node wasn't deleted!");
                        }
                    }
                } else {
                    this.tree.deleteValue(valueToDelete);
                    repaint();
                }
            } else {
                JOptionPane.showMessageDialog(null, "Couldn't find a node with that value!");
            }

        } catch (NumberFormatException nfe) {
            JOptionPane.showMessageDialog(null, "Error: You must input an integer!");
        }
    }//GEN-LAST:event_deleteActionPerformed

    private void balanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_balanceActionPerformed
        this.tree.balanceTree();
        repaint();
    }//GEN-LAST:event_balanceActionPerformed

    private void BFSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BFSActionPerformed
        this.tree.BFS();
        this.RESULT.setText(this.tree.getTraversalResult());
        repaint();
    }//GEN-LAST:event_BFSActionPerformed

    private void DFSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DFSActionPerformed
        this.tree.DFS();
        this.RESULT.setText(this.tree.getTraversalResult());
        repaint();
    }//GEN-LAST:event_DFSActionPerformed

    private void saveFIleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveFIleActionPerformed
        JFileChooser jfc = new JFileChooser();
        if (jfc.showSaveDialog(this) == JFileChooser.APPROVE_OPTION){
            FileWriter fw = null;
            try {
                File file = jfc.getSelectedFile();
                fw = new FileWriter(file);
                this.tree.preOrder();
                fw.write(this.tree.getCountData() + "\n");
                for (int i = 0; i < this.tree.getPath().size(); i++) {
                    for (int j = 0; j < this.tree.getCountOfPathNodes().get(i); j++) {
                        fw.write(this.tree.getPath().get(i)+" ");
                    }
                }
                fw.flush();
            } catch (IOException ioe){
                System.out.println(ioe);
            } finally{
                try {
                    fw.close();
                } catch (IOException ex) {
                    System.out.println(ex);
                }
            }
        }
    }//GEN-LAST:event_saveFIleActionPerformed

    private void openFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openFileActionPerformed
        JFileChooser jfc = new JFileChooser();
        if (jfc.showOpenDialog(this) == JFileChooser.APPROVE_OPTION){
            
            Scanner sc;
            try{
                this.tree.clear();
                File file = jfc.getSelectedFile();
                sc = new Scanner(file);
                int count = sc.nextInt();
                int nodeData;
                for (int i = 0; i < count; i++) {
                    nodeData = sc.nextInt();
                    tree.addNode(nodeData);
                }
                this.p.setTree(tree);
                repaint();
                sc.close();
            }catch (IOException | InputMismatchException ex){
                System.out.println(ex);
            }
        }
    }//GEN-LAST:event_openFileActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BSTDemo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BSTDemo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BSTDemo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BSTDemo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BSTDemo().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BFS;
    private javax.swing.JButton CLEAR;
    private javax.swing.JButton DFS;
    private javax.swing.JTextField RESULT;
    private javax.swing.JButton addRandomValue;
    private javax.swing.JButton addValue;
    private javax.swing.JButton balance;
    private javax.swing.JButton delete;
    private javax.swing.JButton inOrder;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton openFile;
    private javax.swing.JPanel pnlConfig;
    private javax.swing.JPanel pnlPaper;
    private javax.swing.JButton postOrder;
    private javax.swing.JButton preOrder;
    private javax.swing.JButton saveFIle;
    private javax.swing.JButton search;
    private javax.swing.JTextField value;
    // End of variables declaration//GEN-END:variables
}
